Super Mode
	
	Overview
		
		-
			Kaeon FUSION implements a directive called Super Mode into the ONE+ parser, allowing
			for more syntactic sugar when coding. The directive is written as follows:
			
			[SUPER]
		-
	
	Effects
		
		Infix Notation
			
			-
				The Super Mode directive will allow for the use of infix notation when coding.
				
				For example:
					
					[SUPER]
					
					1 + 2
					1 - 2
					1 * 2
					1 / 2
					1 % 2
					1 > 2
					1 < 2
					1 >= 2
					1 <= 2
					1 == 2
					1 != 2
					True and False
					True or False
					True xor False
					
				will be pre-processed to:
					
					Add: 1, 2
					Subtract: 1, 2
					Multiply: 1, 2
					Divide: 1, 2
					Modulus: 1, 2
					Greater: 1, 2
					Less: 1, 2
					Greater or Equal: 1, 2
					Less or Equal: 1, 2
					Equal: 1, 2
					Not: Equal: 1, 2
					And: True, False
					Or: True, False
					Exclusive Or: True, False
				
				before being executed, unless the content containing the infix operator is
				surrounded by quotation marks.
			-
		
		Not
			
			-
				The Super Mode directive will allow for the use of the not command without a colon.
				
				For example:
					
					[SUPER]
					
					not True
				
				will be pre-processed to:
					
					Not: True
				
				before being executed, unless the content containing the "not" is surrounded by
				quotation marks.
			-
		
		Assignment
			
			-
				The Super Mode directive will allow for the use of the equals character when
				assigning a value to a variable.
				
				For example:
					
					[SUPER]
					
					i = 1
				
				will be pre-processed to:
					
					i: 1
				
				before being executed, unless the content containing the equals character is
				surrounded by quotation marks.
			-
		
		Index
			
			-
				The Super Mode directive will allow for the use of "@" to access an element in a
				list.
				
				For example:
					
					[SUPER]
					
					Arguments @ 1
				
				will be pre-processed to:
					
					At: Arguments, 1
				
				before being executed, unless the content containing the "@" is surrounded by
				quotation marks.
			-
		
		Scope
			
			-
				The Super Mode directive will allow for the use of "->" to dictate operations
				within objects.
				
				For example:
					
					[SUPER]
					
					Define: foo
						Define: bar
							Log Line: Arguments @ 1
					
					var = foo
					var -> bar: foobar
				
				will be pre-processed to:
					
					Define: foo
						Define: bar
							Log Line: At: Arguments, 1
					
					var: foo
					
					Scope
						In: foo
						bar: foobar
				
				before being executed, unless the content containing the "->" is surrounded by
				quotation marks.
			-
		
		If
			
			-
				The Super Mode directive will allow for the use of "If" to substitute for a scope
				command with a break command.
				
				For example:
					
					[SUPER]
					
					If { my boolean }
						# Operations
				
				will be pre-processed to:
					
					Scope { Break: Not: my boolean }
						# Operations
				
				before being executed, unless the content containing the "if" is surrounded by
				quotation marks.
			-
		
		While
			
			-
				The Super Mode directive will allow for the use of "While" to substitute for a
				scope command with a loop command.
				
				For example:
					
					[SUPER]
					
					While { my boolean }
						# Operations
				
				will be pre-processed to:
					
					Scope
					
						# Operations
						
						Loop: my boolean
				
				before being executed, unless the content containing the "while" is surrounded by
				quotation marks.
			-