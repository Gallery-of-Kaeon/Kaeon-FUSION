FUSION Interpreter Architecture

	Philosophy
	
		-
			The FUSION interpreter architecture dictates the ideal way to implement FUSION using a
			Philosopher's Atlas.
		-
	
	Principles
	
		FUSION Core
		
			-
				A FUSION core is a standard Philosopher's Stone that manages the FUSION process. It
				will have the tag "FUSION", and will contain a boolean flag called "running" that
				indicates whether the process or internal process functions are currently running.
			-
			
			On Call
			
				Update
				
					-
						If a FUSION core receives a packet with the string "Update" as its first
						element, it will scan the Philosopher's Atlas to see if any FUSION units
						have been added or removed.
					-
			
				Stop
				
					-
						If a FUSION core receives a packet with the string "Stop" as its first
						element, it will stop the process and internal process functions if either
						of them are running.
					-
			
			Functions
			
				Process
				
					-
						The process function takes a ONE element as an argument, sets the running
						flag to true, calls the internal process function using the passed in
						element and the boolean true, then flushes the state and sets the running
						flag to false.
					-
			
				Internal Process
				
					-
						The internal process function takes a ONE element and a boolean value that
						signifies whether it was called from the process function or not as
						arguments, sets the running flag to true, and performs the FUSION process
						on the passed in element. The internal process function should prevent
						itself from crashing in the event that any of the FUSION unit functions
						crash.
					-
		
		FUSION Unit
			
			-
				All FUSION commands, along with certain other functionality should be implemented
				as FUSION Units, which are standard Philosopher's Stones and attached to the
				Philosopher's Atlas containing the relevant FUSION cores. They will have the tag
				"FUSION Unit".
			-
		
			Functions
			
				Deny
				
					-
						The deny function is the first function to be called when acting upon an
						element. It takes a ONE element signifying the element that FUSION is
						currently acting upon as an argument and returns a boolean that if true
						will prevent all other FUSION units from acting on this element until
						FUSION has moved to a different element. It returns false by default.
					-
			
				Verify
				
					-
						The verify function is the second function to be called when acting upon an
						element. It takes a ONE element signifying the element that FUSION is
						currently acting upon as an argument and returns a boolean that if false
						will prevent the FUSION unit it belongs to from acting on the passed in
						element until FUSION has moved to a different element. It returns false by
						default.
					-
				
				Trickle Down
				
					-
						The trickle down function is the third function to be called when acting
						upon an element. It takes a ONE element signifying the element that FUSION
						is currently acting upon as an argument and returns a boolean that if false
						will prevent FUSION from trickling down to the element's children. It
						returns true by default.
					-
				
				Process
				
					-
						The process function is the fourth function to be called when acting upon
						an element. It takes a ONE element signifying the element that FUSION is
						currently acting upon and a list of objects generated by performing the
						same function on the element's children as arguments, and returns an
						object. It returns null by default.
					-
				
				Terminate
				
					-
						The terminate function is the fifth function to be called when acting upon
						an element. It takes a ONE element signifying the element that FUSION is
						currently acting upon and a list of objects generated by performing the
						same function on the element's children as arguments, and returns a boolean
						that if true will stop the FUSION process. It returns false by default.
					-
				
				Is Added
				
					-
						The is added function is the sixth function to be called when acting upon
						an element. It takes a ONE element signifying the element that FUSION is
						currently acting upon and a list of objects generated by performing the
						same function on the element's children as arguments, and returns a boolean
						that if false will prevent the object generated by the process function
						from being placed into the list of objects that will be used as an argument
						for the process function when FUSION bubbles up to the element's parent. It
						returns true by default.
					-
				
				Jump
				
					-
						The jump function is the seventh function to be called when acting upon an
						element. It takes a ONE element signifying the element that FUSION is
						currently acting upon and a list of objects generated by performing the
						same function on the element's children as arguments, and may either return
						a ONE element, in which case the FUSION process will jump to said element,
						or a null value. It returns null by default.
					-
				
				Handle Error
				
					-
						The handle error function will only be called if any of the other functions
						encounter an error. It takes a ONE element signifying the element that
						FUSION is currently acting upon and a list of objects generated by
						performing the same function on the element's children, and an error
						message as arguments. It does not return a value.
					-