Kaeon FUSION Stack Interface

	Philosophy
	
		-
			The Kaeon FUSION Stack Interface allows users to cross compile Kaeon FUSION code into
			several mainstream languages.
		-
		
	Principles
	
		Dialects
		
			Cross Dialects
			
				-
					The Kaeon FUSION Stack Interface provides cross dialects analogous to C, C++,
					JavaScript, PHP, Java, Python, C#, and Swift.
				-
			
			Miscellaneous Dialects
			
				-
					The Kaeon FUSION Stack Interface provides ONE dialects analogous to XML, JSON,
					HTML, CSS, and SQL.
				-
		
		Code Groups
			
			-
				The strings provided as code to be cross compiled will be arranged into groups
				prior to cross compilation, and each group will be assigned a unique index. Unless
				otherwise specified, each provided string will be placed by itself into its own
				group.
			-
		
		Arguments
			
			-
				The string form of the first argument, if said argument returns a non-null value
				and at least one argument is present, specifies the directory the cross compiled
				code should be exported to.
				
				If no arguments are present, or if the first argument returns a null value, the
				code will be exported to the local directory.
				
				The second argument, if present, will be a list. The string form of each element in
				the list, if said element is a non-null value, specifies the name of the cross
				compiled group corresponding to its index. If this argument is absent, an element
				corresponding to a given file returns a null value, or there is no element in the
				list corresponding to a given group, the corresponding cross compiled groups will
				be given default names determined by the dialect in use.
				
				Any arguments following the second argument will be specific to the dialect in use.
			-