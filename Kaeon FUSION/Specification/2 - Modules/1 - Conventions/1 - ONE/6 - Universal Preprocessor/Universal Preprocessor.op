Universal Preprocessor

	Philosophy

		-
			The universal preprocessor is a ONE+ based modular preprocessor which may be embedded
			into the source code of any language.
		-

	Principles

		Directives

			-
				Preprocessor directives in the universal preprocessor shall be encoded in directive
				tags.
				
				Directive tags begin with a sequence consisting of an open paren followed by a
				closed angle bracket, which is followed by any valid ONE+ code, referred to as the
				directive tag content, and end with a sequence consisting of an open angle bracket
				followed by a closed paren.

				Each element with no parent in the directive tag content shall constitute a
				separate directive, with the content of said element defining the directive name,
				and with the children of said element defining the directive content.

				The starting and ending sequences can be nullified in any manner otherwise used to
				escape characters by the host language.
			-
		
		Directive Modules

			-
				Code for universal preprocessor directives shall be stored in external files,
				referred to as universal preprocessor interfaces, which may be loaded using a use
				directive.

				The directive name of a use directive, which is case insensitive, is "Use", and its
				directive content consists of an element for each module it is attempting to load
				where the content of said element is the file path of its respective module.
			-