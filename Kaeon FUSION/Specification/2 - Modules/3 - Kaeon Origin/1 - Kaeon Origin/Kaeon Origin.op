Kaeon Origin

	Philosophy
	
		-
			Kaeon Origin is a multi-purpose IDE for developing any sort of digital asset.
		-
	
	Principles
	
		Origin File
		
			-
				The origin file is a ONE+ file that retains metadata between Kaeon FUSION uses.
				
				Kaeon Origin will automatically write to the origin file when new metadata is
				generated.
			-
		
		Perspectives
		
			-
				Perspectives are modules that govern Kaeon Origin's functionality.
				
				Perspectives come in two varieties: Mono console and dual console. Dual console
				perspectives may either be synchronized or unsynchronized.
				
				Kaeon Origin may only have one perspective active at a time. The currently loaded
				perspective will be named in the origin file. If no perspective is loaded at
				startup, the user will be prompted to specify one. If no perspective is specified,
				then Kaeon Origin will exit.
			-
		
		Workspaces
			
			Source Workspaces
				
				-
					The user may specify alternate root directories called source workspaces to
					import assets from. These directories will be named in the origin file.
				-
			
			Build Workspace
			
				-
					The user may specify a single alternate root directory called the build
					workspace to export assets to. This directories will be named in the origin
					file.
				-
		
		Options
		
			-
				The user may open an options menu, which will provide separate sub menus for Kaeon
				Origin and for the active perspective.
				
				Each sub menu will be divided into help and settings categories.
				
				Selecting help will display tutorials and troubleshooting information.
				
				Selecting settings will allow various settings to be adjusted. In the setting sub
				menus, source and build workspaces may be established for both Kaeon Origin and the
				active perspective. If a build workspace is specified for each, the build workspace
				for the active perspective will override the one for Kaeon Origin. Any changes made
				to said settings will be stored in the origin file.
				
				The settings for Kaeon Origin will allow the active perspective to be changed and
				to scan for updates that occurred as Kaeon Origin was running.
			-
		
		Exporting
		
			-
				The user will have the option to export a project with the active input's file as
				the main file and any other selected files as resource files. It will export to the
				build workspace unless otherwise specified.
			-
		
		Automatic Updates
		
			-
				At startup, Kaeon FUSION will scan the internet for available updates. If any are
				available, the user will be asked if they would like the updates installed. If the
				user says yes, the updates will be installed.
			-
		
		GUI
		
			-
				It will be possible to open Kaeon Origin in GUI mode either by opening it from the
				file explorer or by running it from the command line with no arguments.
			-
			
			Inputs
			
				-
					An input is created for each file that is created or opened. Every active input
					will accessible to the user.
					
					When a file is done being edited, it may be removed from Kaeon Origin. At any time
					the user may choose to save the data in the input console to its respective file.
					
					The data for all active inputs will be stored in the origin file. 
					
					Only one input may be active at a time, but multiple may be selected.
				-
				
				Input Console
				
					-
						Every input shall have a corresponding input console, which allows the file to
						be edited.
						
						The nature of the interface provided by the console depends on the active
						perspective.
					-
			
			Dual Console Perspectives
			
				-
					In a dual console perspective, the user will be able to execute the data stored in
					the active input console, which will generate an output console.
					
					The execution of an output console may be stopped at any time. Output consoles may
					also be removed at any time. Removing a running output console stops its execution.
					
					In a synchronized dual console perspective, the output console may respond to
					changes made to its respective input console at runtime, but each input console may
					only have one running output console.
					
					In an unsynchronized dual console perspective, the output console may not respond
					to changes made to its respective input console at runtime, but each input console
					may have multiple running output consoles.
				-
		
		Command Line
			
			-
				If Kaeon Origin is run from the command line with any arguments, it will execute
				within the command line.
				
				Arguments passed through the command line will be either in the form of flags or
				data.
				
				A flag argument consists of a dash followed by an alphabetic character, and a data
				argument is any other argument.
				
				The arguments will be separated into lists, with every sequence of data arguments
				that follows a flag and precedes the following flag or the end of the arguments
				forming a list. Lists will be processed based on the flag that preceded them.
				
				A list preceded by the flag "-r" will specify the names of files to execute.
				
				A list preceded by the flag "-o" will specify a setting to modify, and will only
				contain one data argument. It must be followed by a list preceded by the flag "-s",
				which will specify what to set the setting to.
				
				A list preceded by the flag "-e" will specify the names of files to export.
			-